---
- hosts: webserver
  become: true

    - name: Is root password set?
      command: mysql -u root --execute "SELECT NOW()"
      register: is_root_password_set
      ignore_errors: yes

    - name: Delete anonymous users
      mysql_user:
        user=""
        state="absent"
      when: is_root_password_set.rc == 0

    - name: Generate mysql root password
      shell: tr -d -c "a-zA-Z0-9" \< /dev/urandom | head -c 10
      register: mysql_root_password
      when: is_root_password_set.rc == 0

    - name: Set root password
      mysql_user:
        user=root
        password="{{mysql_root_password.stdout}}"
        host=localhost
      when: is_root_password_set.rc == 0

    - name: Set root password for other hosts
      mysql_user:
        user=root
        password="{{mysql\_root\_password.stdout}}"
        host=serverSql
        login_user="root"
        login_host="localhost"
        login_password="{{mysql_root_password.stdout}}"
      when: is_root_password_set.rc == 0
      with_items: - "127.0.0.1" - "::1"

    - name: Inform user of mysql root password
      debug:
        msg: "MariaDB root password was set to {{mysql_root_password.stdout}}"
      when: is_root_password\set.rc == 0

    - name: Create myapp database
      mysql_db:
        name: myapp
        login_user: root
        login_password: "{{mysql_root_password.stdout}}"
        login_host: localhost
        state: present
      when: is_root_password_set.rc == 0

    - name: Generate myapp\_rw password
      shell: tr -d -c "a-zA-Z0-9" < /dev/urandom | head -c 10
      register: mysql_myapp_rw_password
      when: is_root_password_set.rc == 0

    - name: Create user for myapp db
      mysql_user:
        name: myapp_rw
        password: "{{mysql_myapp_rw_password}}"
        priv: myapp.*:SELECT,INSERT,UPDATE,DELETE
        login_user:
        root login_password: "{{mysql_root_password.stdout}}"
        state: present
      when: is_root_password_set.rc == 0